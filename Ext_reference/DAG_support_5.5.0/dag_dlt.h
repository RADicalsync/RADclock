/*
 * LEGAL NOTICE: This source code: 
 * 
 * a) is a proprietary to Endace Technology Limited, a New Zealand company,
 *    and its suppliers and licensors ("Endace"). You must not copy, modify,
 *    disclose or distribute any part of it to anyone else, except as expressly
 *    permitted in the software license agreement provided with this
 *    software, or with the prior written authorisation of Endace Technology
 *    Limited; 
 *   
 * b) may also be part of inventions that are protected by patents and 
 *    patent applications; and   
 * 
 * c) is (C) copyright to Endace, 2013. All rights reserved, except as
 *    expressly granted under the software license agreement referred to
 *    in clause (a) above.
 *
 */


/*
 * Copyright (c) 2012 Endace Technology Ltd, Hamilton, New Zealand.
 * All rights reserved.
 *
 * This source code is proprietary to Endace Technology Limited and no part
 * of it may be redistributed, published or disclosed except as outlined in
 * the written contract supplied with this product.
 *
 * $Id: 6e1e1fe  from: Thu Oct 3 22:29:46 2013 +0000  author: Nuwan Gunasekara $
 *
 * The header file which defines Endace equivalents to libpcap DLT types.
 */

#ifndef DAG_DLT_H
#define DAG_DLT_H

/*
	includes the definition of HAVE_PCAP from config.h which is generated by configure.ac
*/
#if defined(HAVE_CONFIG_H)
#include "config.h"
#endif /* HAVE_CONFIG_H */
/*
	The header file only declares libpcap dependent functions and data structures when HAVE_PCAP is defined.
*/
#ifdef HAVE_PCAP
#include <pcap.h>	/* libpcap headers. */
#endif /* HAVE_PCAP */

/************ DAG_DLT types *********************/
#ifdef DLT_NULL
	#define DAG_DLT_NULL DLT_NULL
#else
	#define DAG_DLT_NULL	0
#endif
#ifdef DLT_EN10MB
	#define DAG_DLT_EN10MB DLT_EN10MB
#else
	#define DAG_DLT_EN10MB	1
#endif
#ifdef DLT_EN3MB
	#define DAG_DLT_EN3MB DLT_EN3MB
#else
	#define DAG_DLT_EN3MB	2
#endif
#ifdef DLT_AX25
	#define DAG_DLT_AX25 DLT_AX25
#else
	#define DAG_DLT_AX25	3
#endif
#ifdef DLT_PRONET
	#define DAG_DLT_PRONET DLT_PRONET
#else
	#define DAG_DLT_PRONET	4
#endif
#ifdef DLT_CHAOS
	#define DAG_DLT_CHAOS DLT_CHAOS
#else
	#define DAG_DLT_CHAOS	5
#endif
#ifdef DLT_IEEE802
	#define DAG_DLT_IEEE802 DLT_IEEE802
#else
	#define DAG_DLT_IEEE802	6
#endif
#ifdef DLT_ARCNET
	#define DAG_DLT_ARCNET DLT_ARCNET
#else
	#define DAG_DLT_ARCNET	7
#endif
#ifdef DLT_SLIP
	#define DAG_DLT_SLIP DLT_SLIP
#else
	#define DAG_DLT_SLIP	8
#endif
#ifdef DLT_PPP
	#define DAG_DLT_PPP DLT_PPP
#else
	#define DAG_DLT_PPP		9
#endif
#ifdef DLT_FDDI
	#define DAG_DLT_FDDI DLT_FDDI
#else
	#define DAG_DLT_FDDI	10
#endif

#ifdef DLT_ATM_RFC1483
	#define DAG_DLT_ATM_RFC1483 DLT_ATM_RFC1483
#else
	#define DAG_DLT_ATM_RFC1483	11
#endif
#ifdef DLT_RAW
	#define DAG_DLT_RAW DLT_RAW
#else
	#ifdef __OpenBSD__
		#define DAG_DLT_RAW		14
	#else
		#define DAG_DLT_RAW		12
	#endif
#endif

#ifdef DLT_SLIP_BSDOS
	#define DAG_DLT_SLIP_BSDOS DLT_SLIP_BSDOS
#else
	#if defined(__NetBSD__) || defined(__FreeBSD__)
		#define DAG_DLT_SLIP_BSDOS	13
	#else
		#define DAG_DLT_SLIP_BSDOS	15
	#endif
#endif

#ifdef DLT_PPP_BSDOS
	#define DAG_DLT_PPP_BSDOS DLT_PPP_BSDOS
#else
	#if defined(__NetBSD__) || defined(__FreeBSD__)
		#define DAG_DLT_PPP_BSDOS	14
	#else
		#define DAG_DLT_PPP_BSDOS	16
	#endif
#endif

#ifdef DLT_ATM_CLIP
	#define DAG_DLT_ATM_CLIP DLT_ATM_CLIP
#else
	#define DAG_DLT_ATM_CLIP	19
#endif

#ifdef DLT_REDBACK_SMARTEDGE
	#define DAG_DLT_REDBACK_SMARTEDGE DLT_REDBACK_SMARTEDGE
#else
	#define DAG_DLT_REDBACK_SMARTEDGE	32
#endif

#ifdef DLT_PPP_SERIAL
	#define DAG_DLT_PPP_SERIAL DLT_PPP_SERIAL
#else
	#define DAG_DLT_PPP_SERIAL	50
#endif

#ifdef DLT_PPP_ETHER
	#define DAG_DLT_PPP_ETHER
#else
	#define DAG_DLT_PPP_ETHER	51
#endif

#ifdef DLT_SYMANTEC_FIREWALL
	#define DAG_DLT_SYMANTEC_FIREWALL DLT_SYMANTEC_FIREWALL
#else
	#define DAG_DLT_SYMANTEC_FIREWALL	99
#endif

#ifdef DLT_C_HDLC
	#define DAG_DLT_C_HDLC DLT_C_HDLC
#else
	#define DAG_DLT_C_HDLC	104
#endif
#ifdef DLT_CHDLC
	#define DAG_DLT_CHDLC DLT_CHDLC
#else
	#define DAG_DLT_CHDLC	DAG_DLT_C_HDLC
#endif
#ifdef DLT_IEEE802_11
	#define DAG_DLT_IEEE802_11 DLT_IEEE802_11
#else
	#define DAG_DLT_IEEE802_11	105
#endif

#ifdef DLT_FRELAY
	#define DAG_DLT_FRELAY DLT_FRELAY
#else
	#define DAG_DLT_FRELAY	107
#endif

#ifdef DLT_LOOP
	#define DAG_DLT_LOOP DLT_LOOP
#else
	#ifdef __OpenBSD__
		#define DAG_DLT_LOOP	12
	#else
		#define DAG_DLT_LOOP	108
	#endif
#endif

#ifdef DLT_ENC
	#define DAG_DLT_ENC DLT_ENC
#else
	#ifdef __OpenBSD__
		#define DAG_DLT_ENC		13
	#else
		#define DAG_DLT_ENC		109
	#endif
#endif

#ifdef DLT_LINUX_SLL
	#define DAG_DLT_LINUX_SLL DLT_LINUX_SLL
#else
	#define DAG_DLT_LINUX_SLL	113
#endif

#ifdef DLT_LTALK
	#define DAG_DLT_LTALK DLT_LTALK
#else
	#define DAG_DLT_LTALK	114
#endif

#ifdef DLT_ECONET
	#define DAG_DLT_ECONET DLT_ECONET
#else
	#define DAG_DLT_ECONET	115
#endif

#ifdef DLT_IPFILTER
	#define DAG_DLT_IPFILTER DLT_IPFILTER
#else
	#define DAG_DLT_IPFILTER	116
#endif

#ifdef DLT_OLD_PFLOG
	#define DAG_DLT_OLD_PFLOG DLT_OLD_PFLOG
#else
	#ifdef __OpenBSD__
		#define DAG_DLT_OLD_PFLOG	17
	#endif
#endif

#ifdef DLT_PFSYNC
	#define DAG_DLT_PFSYNC DLT_PFSYNC
#else
	#ifdef __OpenBSD__
		#define DAG_DLT_PFSYNC	18
	#endif
#endif

#ifdef DLT_PFLOG
	#define DAG_DLT_PFLOG DLT_PFLOG
#else
	#define DAG_DLT_PFLOG	117
#endif

#ifdef DLT_CISCO_IOS
	#define DAG_DLT_CISCO_IOS DLT_CISCO_IOS
#else
	#define DAG_DLT_CISCO_IOS	118
#endif

#ifdef DLT_PRISM_HEADER
	#define DAG_DLT_PRISM_HEADER DLT_PRISM_HEADER
#else
	#define DAG_DLT_PRISM_HEADER	119
#endif

#ifdef DLT_AIRONET_HEADER
	#define DAG_DLT_AIRONET_HEADER
#else
	#define DAG_DLT_AIRONET_HEADER	120
#endif

#ifdef DLT_HHDLC
	#define DAG_DLT_HHDLC DLT_HHDLC
#else
	#define DAG_DLT_HHDLC		121
#endif

#ifdef DLT_IP_OVER_FC
	#define DAG_DLT_IP_OVER_FC DLT_IP_OVER_FC
#else
	#define DAG_DLT_IP_OVER_FC		122
#endif

#ifdef DLT_SUNATM
	#define DAG_DLT_SUNATM DLT_SUNATM
#else
	#define DAG_DLT_SUNATM		123
#endif

#ifdef DLT_RIO 
	#define DAG_DLT_RIO DLT_RIO 
#else
	#define DAG_DLT_RIO                 124
#endif

#ifdef DLT_PCI_EXP 
	#define DAG_DLT_PCI_EXP DLT_PCI_EXP 
#else
	#define DAG_DLT_PCI_EXP             125
#endif

#ifdef DLT_AURORA
	#define DAG_DLT_AURORA DLT_AURORA
#else
	#define DAG_DLT_AURORA              126
#endif

#ifdef DLT_IEEE802_11_RADIO
	#define DAG_DLT_IEEE802_11_RADIO DLT_IEEE802_11_RADIO
#else
	#define DAG_DLT_IEEE802_11_RADIO	127
#endif

#ifdef DLT_TZSP
	#define DAG_DLT_TZSP DLT_TZSP
#else
	#define DAG_DLT_TZSP                128
#endif

#ifdef DLT_ARCNET_LINUX
	#define DAG_DLT_ARCNET_LINUX DLT_ARCNET_LINUX
#else
	#define DAG_DLT_ARCNET_LINUX	129
#endif

#ifdef DLT_JUNIPER_MLPPP
	#define DAG_DLT_JUNIPER_MLPPP DLT_JUNIPER_MLPPP
#else
	#define DAG_DLT_JUNIPER_MLPPP       130
#endif

#ifdef DLT_JUNIPER_MLFR
	#define DAG_DLT_JUNIPER_MLFR DLT_JUNIPER_MLFR
#else
	#define DAG_DLT_JUNIPER_MLFR        131
#endif

#ifdef DLT_JUNIPER_ES
	#define DAG_DLT_JUNIPER_ES DLT_JUNIPER_ES
#else
	#define DAG_DLT_JUNIPER_ES          132
#endif

#ifdef DLT_JUNIPER_GGSN
	#define DAG_DLT_JUNIPER_GGSN DLT_JUNIPER_GGSN
#else
	#define DAG_DLT_JUNIPER_GGSN        133
#endif

#ifdef DLT_JUNIPER_MFR
	#define DAG_DLT_JUNIPER_MFR DLT_JUNIPER_MFR
#else
	#define DAG_DLT_JUNIPER_MFR         134
#endif

#ifdef DLT_JUNIPER_ATM2
	#define DAG_DLT_JUNIPER_ATM2 DLT_JUNIPER_ATM2
#else
	#define DAG_DLT_JUNIPER_ATM2        135
#endif

#ifdef DLT_JUNIPER_SERVICES
	#define DAG_DLT_JUNIPER_SERVICES DLT_JUNIPER_SERVICES
#else
	#define DAG_DLT_JUNIPER_SERVICES    136
#endif

#ifdef DLT_JUNIPER_ATM1
	#define DAG_DLT_JUNIPER_ATM1 DLT_JUNIPER_ATM1
#else
	#define DAG_DLT_JUNIPER_ATM1        137
#endif

#ifdef DLT_APPLE_IP_OVER_IEEE1394
	#define DAG_DLT_APPLE_IP_OVER_IEEE1394 DLT_APPLE_IP_OVER_IEEE1394
#else
	#define DAG_DLT_APPLE_IP_OVER_IEEE1394	138
#endif

#ifdef DLT_MTP2_WITH_PHDR
	#define DAG_DLT_MTP2_WITH_PHDR DLT_MTP2_WITH_PHDR
#else
	#define DAG_DLT_MTP2_WITH_PHDR	139
#endif

#ifdef DLT_MTP2
	#define DAG_DLT_MTP2 DLT_MTP2
#else
	#define DAG_DLT_MTP2		140
#endif

#ifdef DLT_MTP3
	#define DAG_DLT_MTP3 DLT_MTP3
#else
	#define DAG_DLT_MTP3		141
#endif

#ifdef DLT_SCCP
	#define DAG_DLT_SCCP DLT_SCCP
#else
	#define DAG_DLT_SCCP		142
#endif

#ifdef DLT_DOCSIS
	#define DAG_DLT_DOCSIS DLT_DOCSIS
#else
	#define DAG_DLT_DOCSIS		143
#endif

#ifdef DLT_LINUX_IRDA
	#define DAG_DLT_LINUX_IRDA DLT_LINUX_IRDA
#else
	#define DAG_DLT_LINUX_IRDA		144
#endif

#ifdef DLT_IBM_SP
	#define DAG_DLT_IBM_SP DLT_IBM_SP
#else
	#define DAG_DLT_IBM_SP		145
#endif

#ifdef DLT_IBM_SN
	#define DAG_DLT_IBM_SN DLT_IBM_SN
#else
	#define DAG_DLT_IBM_SN		146
#endif

#ifdef DLT_USER0
	#define DAG_DLT_USER0 DLT_USER0
#else
	#define DAG_DLT_USER0		147
#endif
#ifdef DLT_USER1
	#define DAG_DLT_USER1 DLT_USER1
#else
	#define DAG_DLT_USER1		148
#endif
#ifdef DLT_USER2
	#define DAG_DLT_USER2 DLT_USER2
#else
	#define DAG_DLT_USER2		149
#endif
#ifdef DLT_USER3
	#define DAG_DLT_USER3 DLT_USER3
#else
	#define DAG_DLT_USER3		150
#endif
#ifdef DLT_USER4
	#define DAG_DLT_USER4 DLT_USER4
#else
	#define DAG_DLT_USER4		151
#endif
#ifdef DLT_USER5
	#define DAG_DLT_USER5 DLT_USER5
#else
	#define DAG_DLT_USER5		152
#endif
#ifdef DLT_USER6
	#define DAG_DLT_USER6 DLT_USER6
#else
	#define DAG_DLT_USER6		153
#endif/************ DAG_DLT types *********************/
#ifdef DLT_USER7
	#define DAG_DLT_USER7 DLT_USER7
#else
	#define DAG_DLT_USER7		154
#endif
#ifdef DLT_USER8
	#define DAG_DLT_USER8 DLT_USER8
#else
	#define DAG_DLT_USER8		155
#endif
#ifdef DLT_USER9
	#define DAG_DLT_USER9 DLT_USER9
#else
	#define DAG_DLT_USER9		156
#endif
#ifdef DLT_USER10
	#define DAG_DLT_USER10 DLT_USER10
#else
	#define DAG_DLT_USER10		157
#endif
#ifdef DLT_USER11
	#define DAG_DLT_USER11 DLT_USER11
#else
	#define DAG_DLT_USER11		158
#endif
#ifdef DLT_USER12
	#define DAG_DLT_USER12 DLT_USER12
#else
	#define DAG_DLT_USER12		159
#endif
#ifdef DLT_USER13
	#define DAG_DLT_USER13 DLT_USER13
#else
	#define DAG_DLT_USER13		160
#endif
#ifdef DLT_USER14
	#define DAG_DLT_USER14 DLT_USER14
#else
	#define DAG_DLT_USER14		161
#endif
#ifdef DLT_USER15
	#define DAG_DLT_USER15 DLT_USER15
#else
	#define DAG_DLT_USER15		162
#endif

#ifdef DLT_IEEE802_11_RADIO_AVS
	#define DAG_DLT_IEEE802_11_RADIO_AVS DLT_IEEE802_11_RADIO_AVS
#else
	#define DAG_DLT_IEEE802_11_RADIO_AVS 163
#endif

#ifdef DLT_JUNIPER_MONITOR
	#define DAG_DLT_JUNIPER_MONITOR DLT_JUNIPER_MONITOR
#else
	#define DAG_DLT_JUNIPER_MONITOR     164
#endif

#ifdef DLT_BACNET_MS_TP
	#define DAG_DLT_BACNET_MS_TP DLT_BACNET_MS_TP
#else
	#define DAG_DLT_BACNET_MS_TP	165
#endif

#ifdef DLT_PPP_PPPD
	#define DAG_DLT_PPP_PPPD DLT_PPP_PPPD
#else
	#define DAG_DLT_PPP_PPPD		166
#endif

#define DAG_DLT_PPP_WITH_DIRECTION	DAG_DLT_PPP_PPPD
#define DAG_DLT_LINUX_PPP_WITHDIRECTION	DAG_DLT_PPP_PPPD

#ifdef DLT_JUNIPER_PPPOE
	#define DAG_DLT_JUNIPER_PPPOE DLT_JUNIPER_PPPOE
#else
	#define DAG_DLT_JUNIPER_PPPOE       167
#endif
#ifdef DLT_JUNIPER_PPPOE_ATM
	#define DAG_DLT_JUNIPER_PPPOE_ATM DLT_JUNIPER_PPPOE_ATM
#else
	#define DAG_DLT_JUNIPER_PPPOE_ATM   168
#endif

#ifdef DLT_GPRS_LLC
	#define DAG_DLT_GPRS_LLC DLT_GPRS_LLC
#else
	#define DAG_DLT_GPRS_LLC		169
#endif
#ifdef DLT_GPF_T
	#define DAG_DLT_GPF_T DLT_GPF_T
#else
	#define DAG_DLT_GPF_T		170
#endif
#ifdef DLT_GPF_F
	#define DAG_DLT_GPF_F DLT_GPF_F
#else
	#define DAG_DLT_GPF_F		171
#endif

#ifdef DLT_GCOM_T1E1
	#define DAG_DLT_GCOM_T1E1 DLT_GCOM_T1E1
#else
	#define DAG_DLT_GCOM_T1E1		172
#endif
#ifdef DLT_GCOM_SERIAL
	#define DAG_DLT_GCOM_SERIAL DLT_GCOM_SERIAL
#else
	#define DAG_DLT_GCOM_SERIAL		173
#endif

#ifdef DLT_JUNIPER_PIC_PEER
	#define DAG_DLT_JUNIPER_PIC_PEER DLT_JUNIPER_PIC_PEER
#else
	#define DAG_DLT_JUNIPER_PIC_PEER    174
#endif

#ifdef DLT_ERF_ETH
	#define DAG_DLT_ERF_ETH DLT_ERF_ETH
#else
	#define DAG_DLT_ERF_ETH		175
#endif
#ifdef DLT_ERF_POS
	#define DAG_DLT_ERF_POS DLT_ERF_POS
#else
	#define DAG_DLT_ERF_POS		176
#endif

#ifdef DLT_LINUX_LAPD
	#define DAG_DLT_LINUX_LAPD DLT_LINUX_LAPD
#else
	#define DAG_DLT_LINUX_LAPD		177
#endif

#ifdef DLT_JUNIPER_ETHER
	#define DAG_DLT_JUNIPER_ETHER DLT_JUNIPER_ETHER
#else
	#define DAG_DLT_JUNIPER_ETHER       178
#endif
#ifdef DLT_JUNIPER_PPP
	#define DAG_DLT_JUNIPER_PPP DLT_JUNIPER_PPP
#else
	#define DAG_DLT_JUNIPER_PPP         179
#endif
#ifdef DLT_JUNIPER_FRELAY
	#define DAG_DLT_JUNIPER_FRELAY DLT_JUNIPER_FRELAY
#else
	#define DAG_DLT_JUNIPER_FRELAY      180
#endif
#ifdef DLT_JUNIPER_CHDLC
	#define DAG_DLT_JUNIPER_CHDLC DLT_JUNIPER_CHDLC
#else
	#define DAG_DLT_JUNIPER_CHDLC       181
#endif

#ifdef DLT_MFR
	#define DAG_DLT_MFR DLT_MFR
#else
	#define DAG_DLT_MFR                 182
#endif

#ifdef DLT_JUNIPER_VP
	#define DAG_DLT_JUNIPER_VP DLT_JUNIPER_VP
#else
	#define DAG_DLT_JUNIPER_VP          183
#endif

#ifdef DLT_A429 
	#define DAG_DLT_A429 DLT_A429 
#else
	#define DAG_DLT_A429                184
#endif

#ifdef DLT_A653_ICM 
	#define DAG_DLT_A653_ICM DLT_A653_ICM 
#else
	#define DAG_DLT_A653_ICM            185
#endif

#ifdef DLT_USB
	#define DAG_DLT_USB DLT_USB
#else
	#define DAG_DLT_USB			186
#endif

#ifdef DLT_BLUETOOTH_HCI_H4
	#define DAG_DLT_BLUETOOTH_HCI_H4 DLT_BLUETOOTH_HCI_H4
#else
	#define DAG_DLT_BLUETOOTH_HCI_H4	187
#endif

#ifdef DLT_IEEE802_16_MAC_CPS
	#define DAG_DLT_IEEE802_16_MAC_CPS DLT_IEEE802_16_MAC_CPS
#else
	#define DAG_DLT_IEEE802_16_MAC_CPS	188
#endif

#ifdef DLT_USB_LINUX
	#define DAG_DLT_USB_LINUX DLT_USB_LINUX
#else
	#define DAG_DLT_USB_LINUX		189
#endif

#ifdef DLT_CAN20B 
	#define DAG_DLT_CAN20B DLT_CAN20B 
#else
	#define DAG_DLT_CAN20B              190
#endif

#ifdef DLT_IEEE802_15_4_LINUX
	#define DAG_DLT_IEEE802_15_4_LINUX DLT_IEEE802_15_4_LINUX
#else
	#define DAG_DLT_IEEE802_15_4_LINUX	191
#endif

#ifdef DLT_PPI
	#define DAG_DLT_PPI DLT_PPI
#else
	#define DAG_DLT_PPI			192
#endif

#ifdef DLT_IEEE802_16_MAC_CPS_RADIO
	#define DAG_DLT_IEEE802_16_MAC_CPS_RADIO DLT_IEEE802_16_MAC_CPS_RADIO
#else
	#define DAG_DLT_IEEE802_16_MAC_CPS_RADIO	193
#endif

#ifdef DLT_JUNIPER_ISM 
	#define DAG_DLT_JUNIPER_ISM DLT_JUNIPER_ISM 
#else
	#define DAG_DLT_JUNIPER_ISM         194
#endif

#ifdef DLT_IEEE802_15_4
	#define DAG_DLT_IEEE802_15_4 DLT_IEEE802_15_4
#else
	#define DAG_DLT_IEEE802_15_4	195
#endif

#ifdef DLT_SITA
	#define DAG_DLT_SITA DLT_SITA
#else
	#define DAG_DLT_SITA		196
#endif

#ifdef DLT_ERF
	#define DAG_DLT_ERF DLT_ERF
#else
	#define DAG_DLT_ERF			197
#endif

#ifdef DLT_RAIF1
	#define DAG_DLT_RAIF1 DLT_RAIF1
#else
	#define DAG_DLT_RAIF1		198
#endif

#ifdef DLT_IPMB
	#define DAG_DLT_IPMB DLT_IPMB
#else
	#define DAG_DLT_IPMB		199
#endif

#ifdef DLT_JUNIPER_ST
	#define DAG_DLT_JUNIPER_ST DLT_JUNIPER_ST
#else
	#define DAG_DLT_JUNIPER_ST          200
#endif

#ifdef DLT_BLUETOOTH_HCI_H4_WITH_PHDR
	#define DAG_DLT_BLUETOOTH_HCI_H4_WITH_PHDR DLT_BLUETOOTH_HCI_H4_WITH_PHDR
#else
	#define DAG_DLT_BLUETOOTH_HCI_H4_WITH_PHDR	201
#endif

#ifdef DLT_AX25_KISS
	#define DAG_DLT_AX25_KISS DLT_AX25_KISS
#else
	#define DAG_DLT_AX25_KISS		202
#endif

#ifdef DLT_LAPD
	#define DAG_DLT_LAPD DLT_LAPD
#else
	#define DAG_DLT_LAPD		203
#endif

#ifdef DLT_PPP_WITH_DIR
	#define DAG_DLT_PPP_WITH_DIR DLT_PPP_WITH_DIR
#else
	#define DAG_DLT_PPP_WITH_DIR	204
#endif
#ifdef DLT_C_HDLC_WITH_DIR
	#define DAG_DLT_C_HDLC_WITH_DIR DLT_C_HDLC_WITH_DIR
#else
	#define DAG_DLT_C_HDLC_WITH_DIR	205
#endif
#ifdef DLT_FRELAY_WITH_DIR
	#define DAG_DLT_FRELAY_WITH_DIR DLT_FRELAY_WITH_DIR
#else
	#define DAG_DLT_FRELAY_WITH_DIR	206
#endif
#ifdef DLT_LAPB_WITH_DIR
	#define DAG_DLT_LAPB_WITH_DIR DLT_LAPB_WITH_DIR
#else
	#define DAG_DLT_LAPB_WITH_DIR	207
#endif

#ifdef DLT_IPMB_LINUX
	#define DAG_DLT_IPMB_LINUX DLT_IPMB_LINUX
#else
	#define DAG_DLT_IPMB_LINUX		209
#endif

#ifdef DLT_FLEXRAY
	#define DAG_DLT_FLEXRAY DLT_FLEXRAY
#else
	#define DAG_DLT_FLEXRAY		210
#endif

#ifdef DLT_MOST
	#define DAG_DLT_MOST DLT_MOST
#else
	#define DAG_DLT_MOST		211
#endif

#ifdef DLT_LIN
	#define DAG_DLT_LIN DLT_LIN
#else
	#define DAG_DLT_LIN			212
#endif

#ifdef DLT_X2E_SERIAL
	#define DAG_DLT_X2E_SERIAL DLT_X2E_SERIAL
#else
	#define DAG_DLT_X2E_SERIAL		213
#endif

#ifdef DLT_X2E_XORAYA
	#define DAG_DLT_X2E_XORAYA DLT_X2E_XORAYA
#else
	#define DAG_DLT_X2E_XORAYA		214
#endif

#ifdef DLT_IEEE802_15_4_NONASK_PHY
	#define DAG_DLT_IEEE802_15_4_NONASK_PHY DLT_IEEE802_15_4_NONASK_PHY
#else
	#define DAG_DLT_IEEE802_15_4_NONASK_PHY	215
#endif

#ifdef DLT_LINUX_EVDEV
	#define DAG_DLT_LINUX_EVDEV DLT_LINUX_EVDEV
#else
	#define DAG_DLT_LINUX_EVDEV		216
#endif

#ifdef DLT_GSMTAP_UM
	#define DAG_DLT_GSMTAP_UM DLT_GSMTAP_UM
#else
	#define DAG_DLT_GSMTAP_UM		217
#endif
#ifdef DLT_GSMTAP_ABIS
	#define DAG_DLT_GSMTAP_ABIS DLT_GSMTAP_ABIS
#else
	#define DAG_DLT_GSMTAP_ABIS		218
#endif

#ifdef DLT_MPLS
	#define DAG_DLT_MPLS DLT_MPLS
#else
	#define DAG_DLT_MPLS		219
#endif

#ifdef DLT_USB_LINUX_MMAPPED
	#define DAG_DLT_USB_LINUX_MMAPPED DLT_USB_LINUX_MMAPPED
#else
	#define DAG_DLT_USB_LINUX_MMAPPED	220
#endif

#ifdef DLT_DECT
	#define DAG_DLT_DECT DLT_DECT
#else
	#define DAG_DLT_DECT		221
#endif

#ifdef DLT_AOS
	#define DAG_DLT_AOS DLT_AOS
#else
	#define DAG_DLT_AOS                 222
#endif

#ifdef DLT_WIHART
	#define DAG_DLT_WIHART DLT_WIHART
#else
	#define DAG_DLT_WIHART		223
#endif

#ifdef DLT_FC_2
	#define DAG_DLT_FC_2 DLT_FC_2
#else
	#define DAG_DLT_FC_2		224
#endif

#ifdef DLT_FC_2_WITH_FRAME_DELIMS
	#define DAG_DLT_FC_2_WITH_FRAME_DELIMS DLT_FC_2_WITH_FRAME_DELIMS
#else
	#define DAG_DLT_FC_2_WITH_FRAME_DELIMS	225
#endif

#ifdef DLT_IPNET
	#define DAG_DLT_IPNET DLT_IPNET
#else
	#define DAG_DLT_IPNET			226
#endif

#ifdef DLT_CAN_SOCKETCAN
	#define DAG_DLT_CAN_SOCKETCAN DLT_CAN_SOCKETCAN
#else
	#define DAG_DLT_CAN_SOCKETCAN		227
#endif

#ifdef DLT_IPV4
	#define DAG_DLT_IPV4 DLT_IPV4
#else
	#define DAG_DLT_IPV4			228
#endif
#ifdef DLT_IPV6
	#define DAG_DLT_IPV6 DLT_IPV6
#else
	#define DAG_DLT_IPV6			229
#endif
/************ DAG_DLT types ENDS *********************/

/************ DAG_DLT strings *********************/
#define STRING_DAG_DLT_EN10MB	"DAG_DLT_EN10MB"
#define STRING_DAG_DLT_ATM_RFC1483	"DAG_DLT_ATM_RFC1483"
#define STRING_DAG_DLT_RAW	"DAG_DLT_RAW"
#define STRING_DAG_DLT_PPP_SERIAL	"DAG_DLT_PPP_SERIAL"
#define STRING_DAG_DLT_CHDLC	"DAG_DLT_CHDLC"
#define STRING_DAG_DLT_FRELAY	"DAG_DLT_FRELAY"
#define STRING_DAG_DLT_SUNATM	"DAG_DLT_SUNATM"
#define STRING_DAG_DLT_MTP2	"DAG_DLT_MTP2"
#define STRING_DAG_DLT_DOCSIS	"DAG_DLT_DOCSIS"
#define STRING_DAG_DLT_ERF	"DAG_DLT_ERF"
#define STRING_DAG_DLT_IPV4	"DAG_DLT_IPV4"
#define STRING_DAG_DLT_IPV6	"DAG_DLT_IPV6"
#define STRING_DAG_DLT_LINUX_SLL	"DAG_DLT_LINUX_SLL"
#define STRING_DAG_DLT_UNSUPPORTED	"DAG_DLT_UNSUPPORTED"
/************ DAG_DLT strings ENDS *********************/

#endif /* DAG_DLT_H */
