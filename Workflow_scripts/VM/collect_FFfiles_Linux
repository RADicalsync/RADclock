#!/bin/bash

# This script not yet earthly compatible
#
# Best to run this in V4 directory, but not essential

V='new'      # select on new locations (â‰¥4.19) or old
if [ $V == "old" ]; then
	Distro='3.2.y-3.2.2'
	Distro='2.6.32.y'
else
	Distro='4.19-debian'
fi

# When running in the VM to initialize the CurrentSource dir, run from /root/FFkernel_Work
if [ `uname -s` == "Linux" ]; then
	cd /root/FFkernel_Work
	OSv=`uname -r | cut -d'.' -f1-2`
	LinuxDir="/usr/src/linux-source-$OSv"
	FlatDir="CurrentSource"
else
# When running on Icaro to flatten files from a downloaded tree, run from V4
	LinuxDir="/Users/darryl/Papers/TSCclock/Programs/V4/Linux/linux-$Distro"
	FlatDir="LinuxFFfiles_$Distro"
fi

echo "Filling $FlatDir with FF related files from source tree at $LinuxDir" 

# Make destination Dir if needed
mkdir -pv $FlatDir
cd $FlatDir

# Select command: copy or symlink
if [ "$1" == "-c" ]; then
	CMD="cp "
	echo "Files will be copied as requested"
else
	CMD="ln -s "
	echo "Files will be symlinked"
fi

# Determine naming of RADclock components: old radclock, or newer ffclock
RAD="ffclock"		# now the default, dropping backward compat
#if [ -e "$LinuxDir/drivers/radclock" ]; then
#	RAD="ffclock"
#else
#	RAD="ffclock"	# default even if no files there: symlinks will be created anyway, cp will fail
#fi

$CMD $LinuxDir/drivers/Kconfig  	drivers_Kconfig
$CMD $LinuxDir/drivers/Makefile  	drivers_Makefile
$CMD $LinuxDir/drivers/$RAD/{Kconfig,Makefile,$RAD.c}	.
$CMD $LinuxDir/include/linux/{$RAD,skbuff,syscalls}.h	.
if [ $V == "old" ]; then
	$CMD $LinuxDir/kernel/time.c	.
	$CMD $LinuxDir/include/linux/sockios.h	.
	$CMD $LinuxDir/include/asm-generic/sockios.h	asm-generic_sockios.h	
	$CMD $LinuxDir/arch/x86/include/asm/unistd_{32,64}.h	.
	$CMD $LinuxDir/arch/x86/kernel/syscall_table_32.S	.		# this now autogenerated since 2011
	$CMD $LinuxDir/arch/x86/kernel/vsyscall_64.c	.
	$CMD $LinuxDir/arch/x86/vdso/vclock_gettime.c	.
	if [ $Distro == "2.6.32.y" ]; then
		$CMD $LinuxDir/kernel/time/Kconfig	time_Kconfig
		$CMD $LinuxDir/fs/compat_ioctl.c	.
	fi
else
	$CMD $LinuxDir/kernel/time/time.c	.
	$CMD $LinuxDir/include/uapi/linux/sockios.h	.
	$CMD $LinuxDir/include/uapi/asm-generic/sockios.h	asm-generic_sockios.h
	## AMD64 specific
	$CMD $LinuxDir/arch/x86/entry/syscalls/syscall_{32,64}.tbl .
	## ARM specific
	# $CMD $LinuxDir/include/uapi/asm-generic/unistd.h	unistd.h
	## Drop VDSO for now
	# $CMD $LinuxDir/arch/x86/entry/vsyscall/vsyscall_64.c	# vsyscall deprecated in favour of vdso, so won't use
	# $CMD $LinuxDir/arch/x86/entry/vdso/vclock_gettime.c	.
fi
$CMD $LinuxDir/include/net/sock.h	.
$CMD $LinuxDir/kernel/time/timekeeping.c	.
$CMD $LinuxDir/net/core/{skbuff,sock,dev}.c	.
$CMD $LinuxDir/net/socket.c	.
$CMD $LinuxDir/net/ipv4/af_inet.c	.
$CMD $LinuxDir/net/packet/af_packet.c	.
## Drop VDSO for now
#$CMD $LinuxDir/arch/x86/include/asm/vgtod.h	.

#echo
#echo " Now extra files patched in raspbian 3.2.27 patch, not yet included above. "
#$CMD $LinuxDir/arch/arm/configs/bcmrpi_cutdown_defconfig	.
#$CMD $LinuxDir/arch/arm/include/asm/unistd.h	.		# removed, got in the way of the other unistd.h
#$CMD $LinuxDir/arch/arm/kernel/calls.S	.

cd ../
ls -al $FlatDir
