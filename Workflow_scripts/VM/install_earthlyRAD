#!/usr/bin/env bash
# #!/bin/bash

# This script takes an earthly build for RADclock and installs it
# Currently packages built by  earthly +build-radclock-with-kernel-arm64  in the RADclock repo.
# The build is not a .deb, but a build dir with {bin,include,lib,share} subdirs. 
echo "Installing the earthly generated RADclock package" 


OS=`uname -s`
if [ $OS != "Linux" ]; then
	echo "Sorry, this script is only meant for Linux at present, you are on $OS"
fi

# Pi detection 
OnPi="No"
Arch=`uname -m`
if [ $Arch == "aarch64" ]; then
	if [ $OS == "Linux" ]; then
		OnPi="Yes"
		ServerHome="darryl@192.168.1.104"
		Repo="Papers/TSCclock/Programs/V4/RADclock_mycurrent"
		echo "I see $OS on $Arch, I infer you are on a Pi. Expecting repo at $ServerHome"
	fi
fi

# Get the location of the package
Based="$HOME/FFkernel_Work"
BuildDir="radclock-build"
if [ $OnPi == "Yes" ]; then
	RADdir="$ServerHome:$Repo"
	PkgDir="$RADdir/artifacts/radclock-with-kernel/arm64/$BuildDir"
else
	RADdir="$Based/V4_mountedfrom_Icaro/RADclock_mycurrent"
	PkgDir="$RADdir/artifacts/radclock-with-kernel/amd64/$BuildDir"
fi


# Get latest packages generated by earthly
cd $Based
rm -r $BuildDir		# start from scratch
echo "** Grabbing package in $PkgDir"
scp -r $PkgDir .


# Manual installation 
echo
echo "** Installing package in /usr/local/"
cd $BuildDir
cp bin/radclock           /usr/local/bin/
cp include/radclock.h     /usr/local/include/
# Symlinks not preserved by scp, so recreate original lib structure
cd lib
rm libradclock.so
ln -s libradclock-RAD* libradclock.so
cp -R *  /usr/local/lib/

cd ../../

# Man not yet installed, but would be:
#ln -s radclock-build/share/man/man5/radclock.conf.5 /usr/local/share/man/man5/
#ln -s radclock-build/share/man/man8/radclock.8 /usr/local/share/man/man8/

echo '** Done, basic test:'
radclock -h

#service radclock status
