#!/usr/bin/env bash
# #!/bin/bash

## Options
# use $1 $2 to pass up to two options, most important are -n for safe testing, --delete to clean
# TODO Add switch to include version.sh 

echo Updating working RADclock with repo source  [leaving all non-source files]


# Pi detection 
Arch=`uname -m`
OS=`uname -s`
OnPi="No"
if [ $Arch == "aarch64" ]; then
	if [ $OS == "Linux" ]; then
		OnPi="Yes"
		ServerHome="darryl@192.168.1.104"
		Repo="Papers/TSCclock/Programs/V4/RADclock_mycurrent"
		#echo "I see $OS on $Arch, I infer you are on a Pi. Expecting repo at $ServerHome"
	fi
fi


#echo Differences are : 
#diff RADclock_mycurrent/radclock 	V4_mountedfrom_Icaro/RADclock_mycurrent/radclock  |grep -v Only |less

Based="$HOME/FFkernel_Work"
if [ $OnPi == "Yes" ]; then
	RADsource="$ServerHome:$Repo"
else
	RADsource=$Based/V4_mountedfrom_Icaro/RADclock_mycurrent
fi

RADtarget=$Based/RADclock_working
echo "  rSyncing from  $RADsource  -->  $RADtarget"


# -a archive mode
# -c use checksums to determine if files have changed and should be updated
# -i to give itemized output detailing what was done for each updated file  (but without other verbose output)
# --delete-excluded  to delete all dirs and files that have been removed, and exclude files that might be there
rsync $1 $2 -aci --no-owner --no-group	 $RADsource/   $RADtarget   \
				--exclude='.git'      --exclude='version.sh'  --exclude='artifacts' \
				--exclude='.DS_Store' --exclude='*/.DS_Store' --exclude='*/*/.DS_Store'	\
				
# Original itemized sets 
#rsync $1  -aci $RADsource/libradclock/*.{c,h}	$RADtarget/libradclock/
#rsync $1  -aci $RADsource/radclock/*.{c,h}	$RADtarget/radclock/
#rsync $1  -aci $RADsource/examples/*.c		$RADtarget/examples
#rsync $1  -aci $RADsource/tests/*.c		$RADtarget/tests
#rsync $1  -aci $RADsource/{Makefile.am,configure.ac}	$RADtarget
#rsync $1  -aci $RADsource/{ChangeLog,NEWS,README}	$RADtarget
