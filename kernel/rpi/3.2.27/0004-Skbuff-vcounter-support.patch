From db2d92d11fc60657057443630986f0744745283d Mon Sep 17 00:00:00 2001
From: Julien Ridoux <julien@synclab.org>
Date: Mon, 30 Aug 2010 20:19:27 +1000
Subject: [PATCH 4/9] Skbuff vcounter support

Add support for creating raw vcounter timestamps on captured packets
---
 include/linux/skbuff.h |    9 +++++++++
 net/core/skbuff.c      |    8 ++++++++
 2 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index fe86488..c2f7889 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -29,10 +29,14 @@
 #include <linux/rcupdate.h>
 #include <linux/dmaengine.h>
 #include <linux/hrtimer.h>
 #include <linux/dma-mapping.h>

+#ifdef CONFIG_RADCLOCK
+#include <linux/clocksource.h>
+#endif
+
 /* Don't change this without changing skb_csum_unnecessary! */
 #define CHECKSUM_NONE 0
 #define CHECKSUM_UNNECESSARY 1
 #define CHECKSUM_COMPLETE 2
 #define CHECKSUM_PARTIAL 3
@@ -374,10 +378,15 @@ struct sk_buff {
	struct sk_buff		*next;
	struct sk_buff		*prev;

	ktime_t			tstamp;

+#ifdef CONFIG_RADCLOCK
+	vcounter_t		vcount_stamp;
+	ktime_t 		tstamp_fair; /* Specific to the FAIR_COMPARE mode, ns resolution */
+#endif
+
	struct sock		*sk;
	struct net_device	*dev;

	/*
	 * This is the control buffer. It is free to use for every
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 3c30ee4..a1dece1 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -211,10 +211,14 @@ struct sk_buff *__alloc_skb(unsigned int size, gfp_t gfp_mask,
	skb->truesize = SKB_TRUESIZE(size);
	atomic_set(&skb->users, 1);
	skb->head = data;
	skb->data = data;
	skb_reset_tail_pointer(skb);
+#ifdef CONFIG_RADCLOCK
+	skb->vcount_stamp = 0;
+	skb->tstamp_fair = ktime_set(-1L, -1L);
+#endif
	skb->end = skb->tail + size;
 #ifdef NET_SKBUFF_DATA_USES_OFFSET
	skb->mac_header = ~0U;
 #endif

@@ -533,10 +537,14 @@ bool skb_recycle_check(struct sk_buff *skb, int skb_size)
 EXPORT_SYMBOL(skb_recycle_check);

 static void __copy_skb_header(struct sk_buff *new, const struct sk_buff *old)
 {
	new->tstamp		= old->tstamp;
+	#ifdef CONFIG_RADCLOCK
+	new->vcount_stamp 	= old->vcount_stamp;
+	new->tstamp_fair 	= old->tstamp_fair;
+	#endif
	new->dev		= old->dev;
	new->transport_header	= old->transport_header;
	new->network_header	= old->network_header;
	new->mac_header		= old->mac_header;
	skb_dst_copy(new, old);
--
1.7.5.4
