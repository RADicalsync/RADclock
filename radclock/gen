../libradclock/radapi-base.c:		shm->data_off = offsetof(struct radclock_shm, bufdata);
../libradclock/radapi-base.c:		shm->data_off_old = shm->data_off + sizeof(struct radclock_data);
../libradclock/radapi-base.c:		shm->error_off = offsetof(struct radclock_shm, buferr);
../libradclock/radapi-base.c:		shm->error_off_old = shm->error_off + sizeof(struct radclock_error);
../libradclock/radapi-base.c:		shm->gen = 1;
../libradclock/radapi-base.c:	shm->version = 1;
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:			generation = shm->gen;
../libradclock/radapi-getset.c:		} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:		generation = shm->gen;
../libradclock/radapi-getset.c:	} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:		generation = shm->gen;
../libradclock/radapi-getset.c:	} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:		generation = shm->gen;
../libradclock/radapi-getset.c:	} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-getset.c:		generation = shm->gen;
../libradclock/radapi-getset.c:	} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-time.c:		generation = shm->gen;
../libradclock/radapi-time.c:	} while (generation != shm->gen || !shm->gen);
../libradclock/radapi-time.c:		generation = shm->gen;
../libradclock/radapi-time.c:	} while (generation != shm->gen || !shm->gen);
